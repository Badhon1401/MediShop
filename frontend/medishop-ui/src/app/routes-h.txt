import React from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import { AuthProvider } from './store/AuthContext';
import { ProtectedRoute, PublicRoute } from './components/ProtectedRoute';
import { Layout } from './components/Layout';
import { Dashboard } from './pages/Dashboard';
import { UnauthorizedPage } from './pages/UnauthorizedPage';
import { LoginPage, RegisterPage } from '../modules/user';
import { MedicineInventoryPage } from '../modules/medicine';
import { InventoryPage } from '../modules/inventory';
import { SalesPage, SalesAnalyticsPage } from '../modules/sales';
import { CustomerInventoryPage } from '../modules/customer';
import { SupplierPage } from '../modules/supplier';
import { UserRole } from '../modules/user/types';

const AppRouter: React.FC = () => {
  return (
    <AuthProvider>
      <Router>
        <Routes>
          {/* Public Routes */}
          <Route
            path="/login"
            element={
              <PublicRoute>
                <LoginPage />
              </PublicRoute>
            }
          />
          <Route
            path="/register"
            element={
              <PublicRoute>
                <RegisterPage />
              </PublicRoute>
            }
          />

          {/* Protected Routes with Layout */}
          <Route
            path="/dashboard"
            element={
              <ProtectedRoute>
                <Layout>
                  <Dashboard />
                </Layout>
              </ProtectedRoute>
            }
          />

          {/* Manager Only Routes */}
          <Route
            path="/medicines"
            element={
              <ProtectedRoute allowedRoles={[UserRole.MANAGER, UserRole.SALESPERSON]}>
                <Layout>
                  <MedicineInventoryPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          <Route
            path="/inventory"
            element={
              <ProtectedRoute allowedRoles={[UserRole.MANAGER, UserRole.SALESPERSON]}>
                <Layout>
                  <InventoryPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          <Route
            path="/suppliers"
            element={
              <ProtectedRoute requiredRole={UserRole.MANAGER}>
                <Layout>
                  <SupplierPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          <Route
            path="/sales/analytics"
            element={
              <ProtectedRoute requiredRole={UserRole.MANAGER}>
                <Layout>
                  <SalesAnalyticsPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          {/* Both Manager and Salesperson Routes */}
          <Route
            path="/sales"
            element={
              <ProtectedRoute allowedRoles={[UserRole.MANAGER, UserRole.SALESPERSON]}>
                <Layout>
                  <SalesPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          <Route
            path="/customers"
            element={
              <ProtectedRoute allowedRoles={[UserRole.MANAGER, UserRole.SALESPERSON]}>
                <Layout>
                  <CustomerInventoryPage />
                </Layout>
              </ProtectedRoute>
            }
          />

          {/* Unauthorized Page */}
          <Route path="/unauthorized" element={<UnauthorizedPage />} />

          {/* Default Routes */}
          <Route path="/" element={<Navigate to="/dashboard" replace />} />
          <Route path="*" element={<Navigate to="/dashboard" replace />} />
        </Routes>
      </Router>
    </AuthProvider>
  );
};

export { AppRouter as AppRoutes };
export default AppRouter;
